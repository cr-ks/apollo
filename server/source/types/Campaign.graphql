type Campaign {
  id: ID!
  isActive: Boolean
  name: String
  description: String
  startDate: Date
  endDate: Date
  deliveryDate: Date
  cost: Int
  cpm: Int
  balance: Float
  ads: [Ad]
  advertiser: Advertiser
}

type Query {
  campaign(id: ID!): Campaign
  campaigns(input: SearchCampaignsInput!): [Campaign]
}

type Mutation {
  createCampaign(input: CreateCampaignInput!): Campaign
  updateCampaign(id: ID!, input: UpdateCampaignInput!): Campaign
}

input SearchCampaignsInput {
  id: [ID]
  isActive: Boolean
  startDate: DateRange
  endDate: DateRange
  deliveryDate: DateRange
  cost: IntRange
  cpm: IntRange
  balance: IntRange
  ads: [ID]
  advertiser: [ID]
}

input CreateCampaignInput {
  name: String!
  description: String
  startDate: Date!
  endDate: Date!
  cost: Int!
  cpm: Int!
  advertiser: ID!
}

input UpdateCampaignInput {
  isActive: Boolean
  name: String
  description: String
  startDate: Date
  endDate: Date
  deliveryDate: Date
  cost: Int
  cpm: Int
  balance: Float
  ads: [ID]
  advertiser: ID
}
