type Publisher {
  id: ID!
  isActive: Boolean!
  title: String!
  description: String
  contactName: String
  contactEmail: String
  contactPhone: String
  contactRegion: String
  earningsMTD: Int
  earningsAllTime: Int
  sites: [Site]
  paymentInfo: PaymentInfo
}

type Query {
  publisher(id: ID!): Publisher
  publishers: [Publisher]
}

type Mutation {
  createPublisher(input: CreatePublisherInput!): Publisher
  updatePublisher(id: ID!, input: UpdatePublisherInput!): Publisher
  cancelPublisher(id: ID!): Publisher
  addPublisherPayment(publisherId: ID!, input: AddPaymentInput!): Publisher
}

input CreatePublisherInput {
  title: String!
  description: String
  contactName: String
  contactEmail: String
  contactPhone: String
  contactRegion: String
}

input UpdatePublisherInput {
  id: ID
  isActive: Boolean
  title: String
  description: String
  contactName: String
  contactEmail: String
  contactPhone: String
  contactRegion: String
  earningsMTD: Int
  earningsAllTime: Int
  paymentInfo: AddPaymentInput
}
